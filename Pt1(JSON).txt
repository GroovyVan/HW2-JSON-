"В моем случае JSON заменил на HW2-JSON- для удобства навигации по урокам"

4. Создать внешний репозиторий c названием JSON.

	Repositories>>New>>Name:HW2-JSON->>Create repository

5. Клонировать репозиторий JSON на локальный компьютер.

	git clone https://github.com/GroovyVan/HW2-JSON-.git

6. Внутри локального JSON создать файл “new.json”.

	touch new.json

7. Добавить файл под гит.

	git add new.json

8. Закоммитить файл.

	git commit new.json -m "JSON"

9. Отправить файл на внешний GitHub репозиторий.

	git push

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

	cat >> new.json 
{
	"firstname": "Иван",
	"midlename": "Абабаев",
	"lstname": "Кукуев",
	"age": 33,
	"pets": 4,
	"summa": 4000
}

11. Отправить изменения на внешний репозиторий.

	git commit -a -m "JSON2"
	git push

12. Создать файл preferences.json

	touch preferences.json

13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

	cat >> preferences.json
	{
	"movie": "Batman Returns"
	"tvseries": "Supernatural"
	"food": "Pelmeni"
	"favseason": "Summer"
	"favcountry": "Brazil"
	}

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

	cat >> sklls.json
	{
	"Программа курса":" Базовая теория SDLC, STLC, Что такое клиент-серверная архитектура, HTTP Методы запросов на сервер, Коды ответов HTTP сервера, Структуры HTTP запросов и ответов, Что такое JSON, XML. Их структура, Тестирование API через Postman (JS, автотесты API), Снятие и чтение логов c внешнего сервера, Снифинг http web трафика через Charles и Fiddler, Dev Tools веб браузеров (Google Chrome, FireFox), VPN, Мобильное тестирование, Особенность iOS, Android, гайдлайны, Сборка iOS приложений на XCode, Сборка Android приложений на Android Studio, ADB, Настройка прокси и vpn на iOS и Android, Перехват мобильного трафика через Charles и Fiddler на iOS и Android, Командная строка (terminal), Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса), Основы bash скриптинг, автоматизация рутинных задач на сервере, Доступ к удалённым серверам, Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join), База данных Postgres (установка, настройка и использование), Нереляционная база данных Redis (установка, настройка и использование), Нагрузочное тестирование в Jmeter, Методология разработки Scrum, Техники тест-дизайна (Классы эквивалентности, граничные значения, комбинаторные техники (Попарный, ортогональный, базовый выбор, каждый выбор), состояния и переходы)"
	}

15. Отправить сразу 2 файла на внешний репозиторий.

	git status
	git add skills.json preferences.json -m "pref+skills"

16. На веб интерфейсе создать файл bug_report.json.
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

	Add file>>Create new file>>Name bug_report.json>>Commit changes

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

	bug_report.json>>Edit this file>>
	{
   	"id": 1,
 	"title": "simple_bug1",
  	"env": "Opera ver.1.5",
  	"precondition": "open https://www.google.com/?hl=ru without vpn",
  	"str": "ask helpful link from frend",
  	"ar": "get rick rolled",
  	"er": "get helpful link",
  	"attach": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
	}

19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

	Commit changes

20. Синхронизировать внешний и локальный репозиторий JSON

	git pull